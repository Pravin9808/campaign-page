name: SonarQube, Docker Build & K8s YAML Update

on:
  push:
    branches:
      - main
    paths-ignore:
      - 'Deployment/frontend.yaml'
  pull_request:
    branches:
      - main

jobs:
  # --- 1️⃣ SONARQUBE SCAN ---
  sonar-scan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'

      - name: Run SonarQube Scan
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          sonar-scanner \
            -Dsonar.projectKey=your-project-key \
            -Dsonar.host.url=https://your-sonarqube-server.com \
            -Dsonar.login=${SONAR_TOKEN} \
            -Dsonar.sources=.

  # --- 2️⃣ BUILD & PUSH DOCKER IMAGE ---
  docker-build:
    runs-on: ubuntu-latest
    needs: sonar-scan
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/campaign:${{ github.sha }} .

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ secrets.DOCKER_USERNAME }}/campaign:${{ github.sha }}
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'

      - name: Push Docker image
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/campaign:${{ github.sha }}

      - name: Update Kubernetes deployment file
        run: |
          sed -i "s#image: .*\$#image: ${{ secrets.DOCKER_USERNAME }}/campaign:${{ github.sha }}#g" Deployment/frontend.yaml

      - name: Commit updated frontend.yaml
        run: |
          it config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git add Deployment/frontend.yaml
          git commit -m "Update image tag to ${{ github.sha }}"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # --- 3️⃣ (OPTIONAL) APPLY CHANGES TO CLUSTER ---
  # deploy:
  #   runs-on: ubuntu-latest
  #   needs: docker-build
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v4

  #     - name: Set up kubectl
  #       uses: azure/setup-kubectl@v3
  #       with:
  #         version: 'latest'

  #     - name: Configure kubeconfig
  #       run: |
  #         echo "${{ secrets.KUBECONFIG }}" > kubeconfig
  #         export KUBECONFIG=kubeconfig

  #     - name: Apply updated deployment
  #       run: |
  #         kubectl apply -f k8s/deployment.yaml -n production
  #         kubectl rollout status deployment/my-app-deployment -n production
