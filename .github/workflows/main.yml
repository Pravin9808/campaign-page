name: SonarQube, Docker Build & K8s YAML Update

on:
  push:
    branches:
      - main
    paths-ignore:
      - 'Deployment/frontend.yaml'
  pull_request:
    branches:
      - main

jobs:
  # # --- 1️⃣ SONARQUBE SCAN ---
  # sonar-scan:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v4

  #     - name: Set up JDK 17
  #       uses: actions/setup-java@v4
  #       with:
  #         java-version: '17'

  #     - name: Run SonarQube Scan
  #       env:
  #         SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  #       run: |
  #         sonar-scanner \
  #           -Dsonar.projectKey=your-project-key \
  #           -Dsonar.host.url=https://your-sonarqube-server.com \
  #           -Dsonar.login=${SONAR_TOKEN} \
  #           -Dsonar.sources=.

  # --- 2️⃣ BUILD & PUSH DOCKER IMAGE ---
  docker-build:
    runs-on: ubuntu-latest
    # needs: sonar-scan
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/campaign:${{ github.sha }} .

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ secrets.DOCKER_USERNAME }}/campaign:${{ github.sha }}
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'

      - name: Push Docker image
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/campaign:${{ github.sha }}
  update-k8s:
    name: Update Kubernetes Deployment
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.TOKEN }}
      
      - name: Setup Git config
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
      
      - name: Update Kubernetes deployment file
        env:
          IMAGE_TAG: sha-${{ github.sha }}
          GITHUB_REPOSITORY: ${{ github.repository }}
          REGISTRY: ghcr.io
        run: |
          # Define the new image with tag
          NEW_IMAGE="${REGISTRY}/${GITHUB_REPOSITORY}:${IMAGE_TAG}"
          
          # Update the deployment file directly
          # sed -i "s|image: ${REGISTRY}/.*|image: ${NEW_IMAGE}|g" Deployment/frontend.yaml
          sed -i "s#image: .*\$#image: ${{ secrets.DOCKER_USERNAME }}/campaign:${{ github.sha }}#g" Deployment/frontend.yaml
          
          # Verify the change
          echo "Updated deployment to use image: ${NEW_IMAGE}"
          grep -A 1 "image:" Deployment/frontend.yaml
      
      - name: Commit and push changes
        run: |
          git add Deployment/frontend.yaml
          git commit -m "Update Kubernetes deployment with new image tag: ${{ needs.docker.outputs.image_tag }} [skip ci]" || echo "No changes to commit"
          git push
